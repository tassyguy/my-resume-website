name: Deploy Next.js site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      # 3. Restore Next.js cache
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.{js,ts,jsx,tsx}') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          if [ -f yarn.lock ]; then
            yarn install --frozen-lockfile
          else
            npm ci
          fi

      # 5. Build the Next.js project using local binary
      - name: Build Next.js
        run: ./node_modules/.bin/next build

      # 6. Export static HTML using local binary
      - name: Export Next.js
        run: ./node_modules/.bin/next export

      # 7. Upload the output artifact for Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 1. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # 2. Print the deployed site URL
      - name: Show deployed URL
        run: echo "Your site is live at ${{ steps.deployment.outputs.page_url }}"
