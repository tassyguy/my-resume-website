name: Deploy Next.js 15 site to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Detect package manager (npm or yarn)
      - name: Detect package manager
        id: detect
        run: |
          if [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "install_cmd=install --frozen-lockfile" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "install_cmd=ci" >> $GITHUB_OUTPUT
          fi
      # 3. Setup Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.detect.outputs.manager }}

      # 4. Install dependencies
      - name: Install dependencies
        run: ${{ steps.detect.outputs.manager }} ${{ steps.detect.outputs.install_cmd }}

      # 5. Build the Next.js app
      - name: Build Next.js
        run: npx next build

      # 6. Configure GitHub Pages (Next.js 15 automatic export)
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # 7. Upload Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Point to the main Next.js build folder; configure-pages will detect static files automatically
          path: .next

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Show deployed URL
        run: echo "Your site is live at ${{ steps.deployment.outputs.page_url }}"